ржирж┐ржЪрзЗ Factory Pattern ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржПржХржЯрж┐ ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ ржХрзЛржб ржЙржжрж╛рж╣рж░ржг ржжрзЗржУрзЯрж╛ рж╣рж▓рзЛ, ржпрж╛ ржнржмрж┐рж╖рзНржпрждрзЗ ржЖржкржирж╛рж░ ржХрж╛ржЬрзЗ ржЖрж╕рждрзЗ ржкрж╛рж░рзЗред ржЙржжрж╛рж╣рж░ржгржЯрж┐ рж╣рж▓рзЛ ржПржХржЯрж┐ Notification Factory рж╕рж┐рж╕рзНржЯрзЗржо, ржпрзЗржЦрж╛ржирзЗ ржмрж┐ржнрж┐ржирзНржи ржзрж░ржгрзЗрж░ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи (ржЗржорзЗржЗрж▓, ржПрж╕ржПржоржПрж╕, ржкрзБрж╢ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи) ржкрж╛ржарж╛ржирзЛ ржпрж╛рзЯред 

### ржХрзЛржб ржЙржжрж╛рж╣рж░ржг: Notification Factory

```php
<?php

// Notification Interface
interface Notification {
    public function send($to, $message);
}

// Email Notification Class
class EmailNotification implements Notification {
    public function send($to, $message) {
        echo "Sending Email to {$to} with message: {$message}\n";
    }
}

// SMS Notification Class
class SMSNotification implements Notification {
    public function send($to, $message) {
        echo "Sending SMS to {$to} with message: {$message}\n";
    }
}

// Push Notification Class
class PushNotification implements Notification {
    public function send($to, $message) {
        echo "Sending Push Notification to {$to} with message: {$message}\n";
    }
}

// Notification Factory
class NotificationFactory {
    public static function createNotification($type) {
        switch (strtolower($type)) {
            case 'email':
                return new EmailNotification();
            case 'sms':
                return new SMSNotification();
            case 'push':
                return new PushNotification();
            default:
                throw new Exception("Notification type '{$type}' not supported.");
        }
    }
}

// ржмрзНржпржмрж╣рж╛рж░ ржЙржжрж╛рж╣рж░ржг
try {
    // ржЗржорзЗржЗрж▓ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи
    $emailNotification = NotificationFactory::createNotification('email');
    $emailNotification->send('user@example.com', 'Hello from Email!');

    // ржПрж╕ржПржоржПрж╕ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи
    $smsNotification = NotificationFactory::createNotification('sms');
    $smsNotification->send('+8801234567890', 'Hello from SMS!');

    // ржкрзБрж╢ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи
    $pushNotification = NotificationFactory::createNotification('push');
    $pushNotification->send('DeviceToken123', 'Hello from Push Notification!');
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
```

### ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:
1. **Notification Interface:** 
   - рж╕ржм ржзрж░ржгрзЗрж░ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржирзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ рж╕рзНржЯрзНржпрж╛ржирзНржбрж╛рж░рзНржб ржЗржирзНржЯрж╛рж░ржлрзЗрж╕ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред
   - ржкрзНрж░рждрж┐ржЯрж┐ ржХрзНрж▓рж╛рж╕рзЗ `send` ржорзЗржержб ржерж╛ржХрждрзЗ рж╣ржмрзЗред

2. **Concrete Classes:** 
   - `EmailNotification`, `SMSNotification`, ржПржмржВ `PushNotification` ржХрзНрж▓рж╛рж╕ ржЗржирзНржЯрж╛рж░ржлрзЗрж╕ ржЗржоржкрзНрж▓рж┐ржорзЗржирзНржЯ ржХрж░рзЗред

3. **Factory Class:**
   - `NotificationFactory` ржХрзНрж▓рж╛рж╕ ржЯрж╛ржЗржк ржЕржирзБржпрж╛рзЯрзА рж╕ржарж┐ржХ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рзЗред

4. **ржмрзНржпржмрж╣рж╛рж░:**
   - ржлрзНржпрж╛ржХрзНржЯрж░рж┐ ржХрзНрж▓рж╛рж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрзНрж░рж╛рж╕ржЩрзНржЧрж┐ржХ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯ ржПржмржВ рждрж╛рж░ржкрж░рзЗ `send` ржорзЗржержб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛ рж╣рзЯред

### ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗ ржмрзНржпржмрж╣рж╛рж░:
- ржПржЗ ржзрж░ржгрзЗрж░ ржкрзНржпрж╛ржЯрж╛рж░рзНржиржЯрж┐ ржмрж┐ржнрж┐ржирзНржи ржХржорж┐ржЙржирж┐ржХрзЗрж╢ржи ржЪрзНржпрж╛ржирзЗрж▓рзЗрж░ ржорж╛ржзрзНржпржорзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛрж░ ржЬржирзНржп ржЦрзБржмржЗ ржХрж╛рж░рзНржпржХрж░ред
- ржЙржжрж╛рж╣рж░ржг: ржЗржХржорж╛рж░рзНрж╕ рж╕рж╛ржЗржЯрзЗ ржЕрж░рзНржбрж╛рж░ ржХржиржлрж╛рж░рзНржорзЗрж╢ржирзЗрж░ ржЗржорзЗржЗрж▓, ржПрж╕ржПржоржПрж╕ ржЕрзНржпрж╛рж▓рж╛рж░рзНржЯ, ржмрж╛ ржЕрзНржпрж╛ржкрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржкрзБрж╢ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи ржкрж╛ржарж╛рждрзЗ ржПржЗ ржкрзНржпрж╛ржЯрж╛рж░рзНржиржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛рзЯред

ржЖржкржирж╛рж░ ржнржмрж┐рж╖рзНржпрждрзЗрж░ ржХрж╛ржЬрзЗрж░ ржЬржирзНржп ржПржЯрж┐ ржЙржкржпрзЛржЧрзА рж╣ржмрзЗ ржмрж▓рзЗ ржЖрж╢рж╛ ржХрж░рж┐! ЁЯШК