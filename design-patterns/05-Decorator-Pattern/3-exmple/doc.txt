**Decorator Pattern** ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржлрж╛ржЗрж▓ рж▓ржЬрж┐ржХ ржоржбрж┐ржлрж┐ржХрзЗрж╢ржи ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ, ржЖржорж░рж╛ ржорзВрж▓ ржлрж╛ржЗрж▓рзЗрж░ рж▓ржЬрж┐ржХрзЗрж░ ржУржкрж░ ржмрж┐ржнрж┐ржирзНржи ржлрж┐ржЪрж╛рж░ ржпрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░рж┐, ржпрзЗржоржи: ржлрж╛ржЗрж▓ ржПржиржХрзНрж░рж┐ржкрж╢ржи, ржбрж┐ржХржорзНржкрзНрж░рзЗрж╢ржи, рж▓ржЧрж┐ржВ ржЗрждрзНржпрж╛ржжрж┐ред ржПржЦрж╛ржирзЗ ржПржХржЯрж┐ ржмрж╛рж╕рзНрждржм ржЙржжрж╛рж╣рж░ржг ржжрзЗржУрзЯрж╛ рж╣рж▓рзЛ ржпрзЗржЦрж╛ржирзЗ ржлрж╛ржЗрж▓ рж▓рзЗржЦрж╛рж░ рж▓ржЬрж┐ржХрзЗрж░ ржУржкрж░ ржбрзЗржХрзЛрж░рзЗржЯрж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржПржиржХрзНрж░рж┐ржкрж╢ржи ржПржмржВ рж▓ржЧрж┐ржВ ржпрзБржХрзНржд ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ:

---

### **Code Example: File Logic Modification Using Decorator Pattern**

```php
<?php

// Step 1: Create a FileWriter Interface
interface FileWriter {
    public function write($data);
}

// Step 2: Create a Concrete FileWriter
class BasicFileWriter implements FileWriter {
    private $filePath;

    public function __construct($filePath) {
        $this->filePath = $filePath;
    }

    public function write($data) {
        file_put_contents($this->filePath, $data, FILE_APPEND);
        echo "Data written to file: {$this->filePath}\n";
    }
}

// Step 3: Create an Abstract Decorator
abstract class FileWriterDecorator implements FileWriter {
    protected $fileWriter;

    public function __construct(FileWriter $fileWriter) {
        $this->fileWriter = $fileWriter;
    }

    public function write($data) {
        $this->fileWriter->write($data);
    }
}

// Step 4: Create Concrete Decorators
// Encrypt data before writing
class EncryptedFileWriter extends FileWriterDecorator {
    public function write($data) {
        $encryptedData = base64_encode($data); // Simple encryption using Base64
        echo "Data encrypted.\n";
        parent::write($encryptedData);
    }
}

// Log data before writing
class LoggingFileWriter extends FileWriterDecorator {
    public function write($data) {
        $logMessage = "[LOG] Writing data: " . substr($data, 0, 20) . "..."; // Log first 20 characters
        file_put_contents('app.log', $logMessage . PHP_EOL, FILE_APPEND);
        echo "Log entry created.\n";
        parent::write($data);
    }
}

// Step 5: Use the Decorators
$filePath = 'data.txt';

// Step 5.1: Basic File Writing
$fileWriter = new BasicFileWriter($filePath);
$fileWriter->write("Basic data.\n");

// Step 5.2: File Writing with Encryption
$encryptedWriter = new EncryptedFileWriter($fileWriter);
$encryptedWriter->write("Sensitive data.\n");

// Step 5.3: File Writing with Encryption and Logging
$loggingEncryptedWriter = new LoggingFileWriter($encryptedWriter);
$loggingEncryptedWriter->write("Highly confidential data.\n");

?>
```

---

### **Code Explanation**

1. **FileWriter Interface:** 
   - `FileWriter` ржПржХржЯрж┐ ржЗржирзНржЯрж╛рж░ржлрзЗрж╕ ржпрж╛ `write` ржорзЗржержб ржбрж┐ржлрж╛ржЗржи ржХрж░рзЗред 

2. **BasicFileWriter Class:** 
   - ржПржЗ ржХрзНрж▓рж╛рж╕ржЯрж┐ рж╕рж░рж╛рж╕рж░рж┐ ржлрж╛ржЗрж▓рзЗ ржбрзЗржЯрж╛ рж▓рзЗржЦрж╛рж░ ржХрж╛ржЬ ржХрж░рзЗред

3. **FileWriterDecorator Abstract Class:** 
   - ржПржЯрж┐ ржПржХржЯрж┐ ржЕрзНржпрж╛ржмрж╕рзНржЯрзНрж░рж╛ржХрзНржЯ ржХрзНрж▓рж╛рж╕ ржпрж╛ `FileWriter` ржЗржирзНржЯрж╛рж░ржлрзЗрж╕ ржЗржоржкрзНрж▓рж┐ржорзЗржирзНржЯ ржХрж░рзЗред ржПржЯрж┐ ржорзВрж▓ рж▓рзЗржЦрж╛рж░ рж▓ржЬрж┐ржХрзЗрж░ ржУржкрж░ ржЕрждрж┐рж░рж┐ржХрзНржд ржлрж┐ржЪрж╛рж░ ржпрзЛржЧ ржХрж░рж╛рж░ рж╕рзБржпрзЛржЧ ржжрзЗрзЯред

4. **EncryptedFileWriter Decorator:** 
   - ржПржЦрж╛ржирзЗ ржбрзЗржЯрж╛ржХрзЗ ржПржиржХрзНрж░рж┐ржкрзНржЯ (Base64) ржХрж░рзЗ рждрж╛рж░ржкрж░ ржлрж╛ржЗрж▓рзЗ рж▓рзЗржЦрж╛ рж╣рзЯред

5. **LoggingFileWriter Decorator:** 
   - ржлрж╛ржЗрж▓рзЗ рж▓рзЗржЦрж╛рж░ ржЖржЧрзЗ ржбрзЗржЯрж╛ рж▓ржЧ ржлрж╛ржЗрж▓ (`app.log`) ржП рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣рзЯред

6. **Usage:**
   - **Basic File Writing:** `BasicFileWriter` ржжрж┐рзЯрзЗ ржлрж╛ржЗрж▓рзЗ рж╕рж░рж╛рж╕рж░рж┐ ржбрзЗржЯрж╛ рж▓рзЗржЦрж╛ред
   - **File Writing with Encryption:** `EncryptedFileWriter` ржжрж┐рзЯрзЗ ржбрзЗржЯрж╛ржХрзЗ ржПржиржХрзНрж░рж┐ржкрзНржЯ ржХрж░рзЗ ржлрж╛ржЗрж▓рзЗ рж▓рзЗржЦрж╛ред
   - **File Writing with Encryption and Logging:** `LoggingFileWriter` ржжрж┐рзЯрзЗ рж▓ржЧ рждрзИрж░рж┐ ржХрж░рж╛ ржПржмржВ ржПржиржХрзНрж░рж┐ржкрзНржЯ ржХрж░рзЗ ржлрж╛ржЗрж▓рзЗ рж▓рзЗржЦрж╛ред

---

### **Output Example**

```
Data written to file: data.txt
Data encrypted.
Data written to file: data.txt
Log entry created.
Data encrypted.
Data written to file: data.txt
```

---

### **Generated Files**

1. **data.txt**: 
   Contains the written data (including encrypted content).
   
2. **app.log**: 
   Contains log entries for all written data.

---

### **Real-Life Use Case**
ржПржЗ ржкрзНржпрж╛ржЯрж╛рж░рзНржиржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрзЗрждрзЗ ржкрж╛рж░рзЗ ржпржжрж┐:
- ржлрж╛ржЗрж▓рзЗрж░ ржбрзЗржЯрж╛ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛рж░ ржЖржЧрзЗ ржПржиржХрзНрж░рж┐ржкрзНржЯ ржХрж░рждрзЗ ржЪрж╛ржиред
- рж▓ржЧ рждрзИрж░рж┐ ржХрж░рждрзЗ ржЪрж╛ржи ржлрж╛ржЗрж▓ ржЕржкрж╛рж░рзЗрж╢ржирзЗрж░ ржЬржирзНржпред
- ржбрзЗржЯрж╛ ржХржорзНржкрзНрж░рзЗрж╕ ржХрж░рждрзЗ ржЪрж╛ржиред

ржЖржкржирж╛рж░ ржкрзНрж░рзЯрзЛржЬржирзЗ ржПржЗ ржкрзНржпрж╛ржЯрж╛рж░рзНржи ржЖрж░ржУ ржХрж╛рж╕рзНржЯржорж╛ржЗржЬ ржХрж░рзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗржи! ЁЯШК